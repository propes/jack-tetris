class Brick {
    field int _row, _column;

    constructor Brick new(int row, int column) {
        let _row = row;
        let _column = column;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int getRow() {
        return _row;
    }

    method int getColumn() {
        return _column;
    }

    method void draw() {
        do Board.drawBrick(_row, _column);
        return;
    }

    method void erase() {
        do Board.eraseBrick(_row, _column);
        return;
    }

    method void moveDown() {
        let _row = _row + 1;
        return;
    }

    method void moveLeft() {
        let _column = _column - 1;
        return;
    }

    method void moveRight() {
        let _column = _column + 1;
        return;
    }

    method boolean isOnBoard() {
        if (_row < 0) {
            return false;
        }

        return true;
    }
}